/*
This program has the user input the dimensions of a 2D array, assigns the 
elements random values, then displays whether there are 4 consecutive integers
in the array horizontally, vertically, and horizontally

Below are test cases in the event a 2D array with consecutive integers does not
generate:

Set m 4 and n = 4

Copy one of the folowing to line 40: 
int array[][] = {{1,1,1,1},{1,2,2,2},{2,3,3,3},{3,4,4,4}}; //Horizontal
int array[][] = {{1,5,5,5},{1,2,2,2},{1,3,3,3},{1,4,4,4}}; //Vertical
int array[][] = {{1,5,5,5},{1,1,2,2},{2,3,1,3},{3,4,4,1}}; //Right Diagonal
int array[][] = {{5,5,5,1},{1,2,1,2},{2,1,3,3},{1,4,4,4}}; //Left Diagonal

 */
import java.util.Scanner;

public class Question5 {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        //Prompts user to enter array dimensions such that m, n >= 3
        System.out.println("Enter the number of rows (m): ");
        int m = input.nextInt();    //**** Test case m = 4
        while (m < 3) {
            System.out.println("m must be at least 3");
            m = input.nextInt();
        }
        System.out.println("Enter the number of columns(n): ");
        int n = input.nextInt();  //**** Test case m=4
        while (n < 3) {
            System.out.println("n must be at least 3");
            n = input.nextInt();
        }

        //Creates array with dimension m * n
        int array[][] = new int[m][n];

        //Initializes array elements 
        array = fillArray(array);
        System.out.println("");
        //Prints array for the user
        print(array);

        boolean consecutive;

        //Displays results based on the size of the array
        if (m > 3 || n > 3) {
            //Tests if 4 consecutive integers are in array
            consecutive = consecutive(array);
            if (consecutive == true) {
                System.out.println("\nThere are 4 consecutive numbers in this array");
            } else {
                System.out.println("\nThere are not 4 consecutive numbers in this array");
            }
        } //Consecutive is false by default for 3x3 arrays since they are too small for 4 consecutive integers
        else {
            consecutive = false;
            System.out.println("\nThe array is too small for 4 consecutive numbers");
        }
    }

    // Method that initializes array elements
    public static int[][] fillArray(int[][] array) {
        //Nested for loop hat fills 2D array with random number 0 to 1/4 (m * n)
        for (int row = 0; row < array.length; row++) {
            for (int column = 0; column < array[row].length; column++) {
                array[row][column] = (int) (Math.random() * ((array.length * array[row].length)) / 4);
            }
        }

        return array;
    }

    //Method that prints arrays
    public static void print(int[][] array) {
        for (int row = 0; row < array.length; row++) {
            for (int column = 0; column < array[row].length; column++) {
                System.out.print(array[row][column] + " ");
            }
            System.out.println("");
        }
    }

    //Method that tests if 4 consecutive integers are in the 2D array
    public static boolean consecutive(int[][] array) {
        boolean horizontal = false, vertical = false, diagnal = false;

        horizontal = horizontal(array);
        vertical = vertical(array);
        diagnal = diagnal(array);

        //Returns true if 4 consecutive integers exist
        if (horizontal == true || vertical == true || diagnal == true) {
            return true;
        } else {
            return false;
        }
    }

    //Method that scans 2D array horizontally for 4 consecutive integers
    public static boolean horizontal(int[][] array) {
        //Nested for loop that traverses array
        for (int row = 0; row < array.length; row++) {
            for (int column = 0; column < array[row].length; column++) {
                //Conditional statement that checks if 4 horizontal elements have the same value
                if (column <= array[row].length - 4 && array[row][column] == array[row][column + 1]
                        && array[row][column] == array[row][column + 2]
                        && array[row][column] == array[row][column + 3]) {
                    return true;
                }
            }

        }
        return false;
    }

    //Method that scans 2D array vertically for 4 consecutive integers
    public static boolean vertical(int[][] array) {
        //Nested for loop that traverses array
        for (int row = 0; row < array.length; row++) {
            for (int column = 0; column < array[row].length; column++) {
                //Conditional statement that checks if 4 vertical elements have the same value
                if (row <= array.length - 4 && array[row][column] == array[row + 1][column]
                        && array[row][column] == array[row + 2][column]
                        && array[row][column] == array[row + 3][column]) {
                    return true;
                }
            }

        }
        return false;
    }

    //Method that scans 2D array diagonally for 4 consecutive integers
    public static boolean diagnal(int[][] array) {
        //Nested For loop that traverses array
        for (int row = 0; row < array.length; row++) {
            for (int column = 0; column < array[row].length; column++) {
                //Conditional statement that prevents out of bounds exception
                if (row <= array.length - 4 && column <= array[row].length - 4) {
                    //Conditional statement that checks for 4 consecutive right diagnal integers
                    if ((array[row][column] == array[row + 1][column + 1]
                            && array[row][column] == array[row + 2][column + 2]
                            && array[row][column] == array[row + 3][column + 3])) {
                        return true;
                    } 
                    
                }
                //Conditional that prevents out of bounds exception
                else if (column >= 3 && row <= array.length-4) {
                    //Conditional statement that checks for 4 consecutive left diagnal integers
                    if ((array[row][column] == array[row + 1][column - 1]
                            && array[row][column] == array[row + 2][column - 2]
                            && array[row][column] == array[row + 3][column - 3])) {
                        return true;
                    }
                }
            }   
        }
        return false;
    }
}
